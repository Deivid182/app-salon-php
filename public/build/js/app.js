let step=1;const minStep=1,maxStep=3,appointment={id:"",name:"",date:"",time:"",services:[]};document.addEventListener("DOMContentLoaded",()=>{initApp()});const initApp=()=>{showSection(),tabs(),onChange(),onPrev(),onNext(),queryApi(),getUserId(),getName(),selectDate(),selectTime(),showSummary()},tabs=()=>{document.querySelectorAll(".tabs button").forEach(e=>{e.addEventListener("click",e=>{step=parseInt(e.target.dataset.step),showSection(),onChange()})})},showSection=()=>{const e=document.querySelector(".show");e&&e.classList.remove("show");document.querySelector("#step-"+step).classList.add("show");const t=document.querySelector(".active");t&&t.classList.remove("active");document.querySelector(`.tabs button[data-step="${step}"]`).classList.add("active")},onChange=()=>{const e=document.querySelector("#next"),t=document.querySelector("#prev");1===step?(t.classList.add("hide"),e.classList.remove("hide")):3===step?(t.classList.remove("hide"),e.classList.add("hide"),showSummary()):(t.classList.remove("hide"),e.classList.remove("hide")),showSection()},onPrev=()=>{document.querySelector("#prev").addEventListener("click",()=>{step<=1||(step--,onChange())})},onNext=()=>{document.querySelector("#next").addEventListener("click",()=>{step>=3||(step++,onChange())})},getUserId=()=>{appointment.id=document.querySelector("#id").value},queryApi=async()=>{try{const e=location.origin+"/api/services",t=await fetch(e),n=await t.json();showServices(n)}catch(e){console.log(e)}},showServices=e=>{e.forEach(e=>{const{name:t,id:n,price:o}=e,s=document.createElement("p");s.classList.add("name-service"),s.textContent=t;const a=document.createElement("p");a.classList.add("price-service"),a.textContent="$"+o;const c=document.createElement("div");c.classList.add("service"),c.dataset.id=n,c.onclick=()=>selectService(e),c.appendChild(s),c.appendChild(a),document.querySelector("#services").appendChild(c)})},selectService=e=>{appointment.services.some(t=>t.id===e.id)?(appointment.services=appointment.services.filter(t=>t.id!==e.id),document.querySelector(`[data-id="${e.id}"]`).classList.remove("service-selected")):(appointment.services=appointment.services.concat(e),document.querySelector(`[data-id="${e.id}"]`).classList.add("service-selected"))},getName=()=>{appointment.name=document.querySelector("#name").value},selectDate=()=>{document.querySelector("#date").addEventListener("input",e=>{console.log(e.target.value);const t=new Date(e.target.value);[5,6].includes(t.getDay())?(e.target.value="",appointment.date="",showAlert("Weekends are not available","error",".form",3e3)):appointment.date=e.target.value,console.log(appointment)})},selectTime=()=>{const e=document.querySelector(".alert");e&&e.remove();document.querySelector("#time").addEventListener("input",e=>{const t=e.target.value.split(":")[0];t<10||t>18?(e.target.value="",appointment.time="",showAlert("We are only open from 10am to 6pm","error",".form",3e3)):appointment.time=e.target.value})},showAlert=(e,t,n,o)=>{const s=document.querySelector(".alert");s&&s.remove();const a=document.createElement("div");a.textContent=e,a.classList.add("alert","alert-"+t),document.querySelector(n).appendChild(a),o&&setTimeout(()=>{a.remove()},o)},showSummary=()=>{const e=document.querySelector(".summary");for(;e.firstChild;)e.removeChild(e.firstChild);if(Object.values(appointment).includes("")||0===appointment.services.length)return void showAlert("Fill the form and select a service","error",".summary");const{name:t,date:n,time:o,services:s}=appointment,a=document.createElement("h2");a.textContent="Summary of your services",e.appendChild(a),s.forEach(t=>{const{name:n,price:o,id:s}=t,a=document.createElement("div");a.classList.add("service-summary"),a.innerHTML=`\n      <p>${n}</p>\n      <p>${o}</p>\n    `,e.appendChild(a)});const c=document.createElement("div");c.classList.add("info-client");const i=document.createElement("h2");i.textContent="Information of the client",c.appendChild(i);const r=document.createElement("P");r.innerHTML="<span>Name:</span> "+t;const d=new Date(n),m=d.getTimezoneOffset(),l=new Date(d.getTime()+60*m*1e3).toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"}),p=document.createElement("P");p.innerHTML="<span>Fecha:</span> "+l;const u=document.createElement("P");u.innerHTML=`<span>Time:</span> ${o} hrs`;const h=document.createElement("button");h.classList.add("btn"),h.textContent="Confirm",h.onclick=()=>confirmAppointment(),c.appendChild(r),c.appendChild(p),c.appendChild(u),e.appendChild(c),e.appendChild(h)},confirmAppointment=async()=>{const e=new FormData;console.log("confirming");const{name:t,date:n,time:o,services:s,id:a}=appointment;e.append("userId",a),e.append("name",t),e.append("date",n),e.append("time",o);const c=s.map(e=>e.id);e.append("services",c);const i=location.origin+"/api/appointments";try{const t=await fetch(i,{method:"POST",body:e});if(t.ok){(await t.json()).result&&Swal.fire({position:"center",icon:"success",title:"Appointment created successfully",showConfirmButton:!0}).then(()=>{setTimeout(()=>{location.reload()},3e3)})}else console.log("something went wrong"),Swal.fire({position:"center",icon:"error",title:"Something went wrong",showConfirmButton:!0})}catch(e){console.log(e),Swal.fire({position:"center",icon:"error",title:"Something went wrong",showConfirmButton:!0})}};